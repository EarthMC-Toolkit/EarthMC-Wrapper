plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
}

group = project.maven_group
version = project.wrapper_version

Properties properties = new Properties()
def propertiesFile = project.rootProject.file('.env')
if (propertiesFile.exists()) {
    properties.load(propertiesFile.newDataInputStream())
}

allprojects {
    repositories {
        mavenCentral()

        repositories {
            maven {
                url = uri("https://maven.pkg.github.com/earthmc-toolkit/earthmc-wrapper")
                credentials {
                    username = project.findProperty("gpr.user")
                    password = properties.getProperty('TOKEN') ?: System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_17

dependencies {
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation 'org.jetbrains:annotations:20.1.0'

    implementation 'org.apache.commons:commons-lang3:3.0'
    implementation 'org.jsoup:jsoup:1.14.3'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    testImplementation 'io.github.emcw:emc-wrapper:0.3.3'

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
}

java {
    withSourcesJar()
    //withJavadocJar()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/earthmc-toolkit/earthmc-wrapper")
            credentials {
                username = project.findProperty("gpr.user")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            groupId = findProperty('maven_group')
            artifactId = findProperty('lib_name')
            version = findProperty('wrapper_version')

            from components.java
        }
    }
}

test {
    useJUnitPlatform()
}